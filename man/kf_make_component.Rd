% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kf_make_component.R
\name{kf_make_component}
\alias{kf_make_component}
\title{Make Kubeflow component from a function}
\usage{
kf_make_component(rfunction, name, description, image, file)
}
\arguments{
\item{rfunction}{Name of target function.}

\item{name}{Name of component.}

\item{description}{Description of component.}

\item{image}{Location of Docker image.}

\item{file}{Location to write yaml. Optional.}
}
\value{
Component YAML
}
\description{
Given a defined R function export a YAML file for Kubeflow to consume.
}
\details{
Names of metrics and ui metadata arguments are renamed to required
specifications. Kubeflow likes arguments to be typed, which R doesn't handle
naturally. This function looks for a slug at the end of each argument to
determine the type. For example, \code{table_name_string} would be considered an
input String. Output paths are identified by ending in \verb{_out}. Supported
translations are:

Inputs (inputValue type)
\itemize{
\item \verb{_string} = String
\item \verb{_int} = Integer
\item \verb{_bool} = Bool
\item \verb{_float} = Float
\item #TODO add support for List and Dict
}

Inputs (inputPath type) - useful for passing data between components
\itemize{
\item \verb{_path} = String
}

Outputs
\itemize{
\item \verb{_out} = outputPath
\item \verb{_metrics} = Metrics
\item \verb{_uimeta} = UI_metadata
}
}
\examples{
tfun <- function(table_string, pred_count_int, path_metrics) 2 * 2
kf_make_component("tfun", "Test Component", "Test out the component", "gcr.io/test/test")
}
